name: "Terraform Scanning"

on:
  workflow_call:
    inputs:
      # working-diretory is added to specify "terraform" directory in project source code as that's where the terraform files live.
      working-directory:
        required: false
        type: string
        default: './terraform'
      # apply-brach refers to the branch where 'terraform apply' should execute. It defaults to the 'main' branch, but calling workflow has the option to change it to a deferrent branch to execute 'terraform apply'
      apply-branch:
        required: false
        type: string
        default: 'main'
      environment:
        required: false
        type: string
        default: 'dev'

defaults:
  run:
    shell: bash

jobs:
  terraform:
    name: Deploy terraform
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    
    # important to specify the environment here so workflow knows where to deploy your artifact to.
    # default environment to "dev" if it is not passed in through workflow_dispatch manual trigger
    # environment: ${{ github.event.inputs.environment || 'dev' }}
    # environment: ${{ inputs.environment || 'dev' }}
    environment: 'dev'

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs
      
      - name: Checkout Code
        uses: actions/checkout@d0651293c4a5a52e711f25b41b05b2212f385d28
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838
        with:
          role-to-assume: ${{ secrets.DEV_DEPLOY_ROLE }}
          #aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          #aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{ secrets.AWS_REGION || 'us-east-1' }}
      
      - name: Run Checkov action
        uses: bridgecrewio/checkov-action@3854b91536303a096e7693434ef98706a0be82cb # master
        with:
          directory: ${{ inputs.working-directory }}
          quiet: true # optional: display only failed checks
          soft_fail: true # optional: do not return an error code if there are failed checks
          framework: terraform # optional: run only on a specific infrastructure {cloudformation,terraform,kubernetes,all}
          output_format: sarif # optional: the output format, one of: cli, json, junitxml, github_failed_only, or sarif. Default: sarif
          output_file_path: reports/results.sarif # folder and name of results file
          download_external_modules: true # optional: download external terraform modules from public git repositories and terraform registry
          log_level: DEBUG # optional: set log level. Default WARNING
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@7b3bcd8d76f3cbaec0a3564e53de7c9adf00f0a7
      
      - name: tfsec
        uses: aquasecurity/tfsec-pr-commenter-action@v1.2.0
        with:
          working_directory: .
          soft_fail_commenter: false
          tfsec_formats: default,sarif,checkstyle
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload SARIF file
        #if: ${{ inputs.ENABLE_TFSEC == 'true' }}
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif.json
      
  
